name: "base"
#force_backward: true

layer {
  name: "img"
  type: "ImageData"
  top: "img"
  top: "label1"
  include {
    phase: TRAIN
  }
  transform_param {
    mean_value: 103.939
    mean_value: 116.779
    mean_value: 123.68
  }
  image_data_param {
    source: "/home/wang/zengyi/resoim.txt"
    batch_size: 1
    new_height: 224
    new_width: 224
#    shuffle: true
   # root_folder: "/home/atlas1_ssd/simon/ilsvrc12-scaled/train/"
  }
}
layer {
  name: "label"
  type: "ImageData"
  top: "map"
  top: "label2"
  include {
    phase: TRAIN
  }
  image_data_param {
    source: "/home/wang/zengyi/resogt.txt"
    batch_size: 1
    new_height: 224
    new_width: 224
    is_color: false
 #   shuffle: true
   # root_folder: "/home/atlas1_ssd/simon/ilsvrc12-scaled/train/"
  }
}
#layer {
 # name: "img"
 # type: "ImageData"
 # top: "img"
 # top: "label1"
  #include {
 #   phase: TEST
 # }
#  transform_param {
 #   mean_value: 103.939
#    mean_value: 116.779
 #   mean_value: 123.68
 # }
 # image_data_param {
  #  source: "/media/home/zengyi/Research/DataSet/ILSVRC2014/ILSVRC2014_DET/finalim1val.txt"
 #   batch_size: 32
 #   new_height: 256
 #   new_width: 256
#    shuffle: true
   # root_folder: "/home/atlas1_ssd/simon/ilsvrc12-scaled/train/"
#  }
#}
#layer {
#  name: "map"
 # type: "ImageData"
 # top: "map"
 # top: "label2"
#  include {
 #   phase: TEST
 # }
 # image_data_param {
  #  source: "/media/home/zengyi/Research/DataSet/ILSVRC2014/ILSVRC2014_DET/finalgt1val.txt"
 #   batch_size: 32
 #   new_height: 256
 #   new_width: 256
 #   is_color: false
#    shuffle: true
   # root_folder: "/home/atlas1_ssd/simon/ilsvrc12-scaled/train/"
 # }
#}
layer {
  name: "Silence"
  type: "Silence"
  bottom: "label1"
  bottom: "label2"
}
layer {
  bottom: "img"
  top: "conv1_1"
  name: "conv1_1"
  type: "Convolution"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
    num_output: 64
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "conv1_1_bn"
  type: "BN"
  bottom: "conv1_1"
  top: "conv1_1"
  param {
    lr_mult: 1
    decay_mult: 0
  }
  param {
    lr_mult: 1
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  bn_param {
    slope_filler {
      type: "constant"
      value: 1
    }
    bias_filler {
      type: "constant"
      value: 0
    }
    frozen: true
    momentum: 0.95
  }
}
#layer {
 # bottom: "conv1_1"
#  top: "conv1_1"
#  name: "conv1_1_bn"
#  type: "BN"
#  param {
#    lr_mult: 1
#    decay_mult: 1
#  }
#  param {
#    lr_mult: 1
 #   decay_mult: 0
 # }
 # bn_param {
#	bn_mode: LEARN
#	scale_filler {
#	  type: "constant"
#	  value: 1
#	}
#	shift_filler {
#	  type: "constant"
#	  value: 0
#	}
# }
#}
layer {
  bottom: "conv1_1"
  top: "conv1_1"
  name: "relu1_1"
  type: "ReLU"
}
layer {
  bottom: "conv1_1"
  top: "conv1_2"
  name: "conv1_2"
  type: "Convolution"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
    num_output: 64
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "conv1_2_bn"
  type: "BN"
  bottom: "conv1_2"
  top: "conv1_2"
  param {
    lr_mult: 1
    decay_mult: 0
  }
  param {
    lr_mult: 1
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  bn_param {
    slope_filler {
      type: "constant"
      value: 1
    }
    bias_filler {
      type: "constant"
      value: 0
    }
    frozen: true
    momentum: 0.95
  }
}
layer {
  bottom: "conv1_2"
  top: "conv1_2"
  name: "relu1_2"
  type: "ReLU"
}
layer {
  name: "pool1_drop"
  type: "Dropout"
  bottom: "conv1_2"
  top: "conv1_2"
  dropout_param {
    dropout_ratio: 0.5
  }
}
layer {
  bottom: "conv1_2"
  top: "pool1"
#  top: "pool1_mask"
  name: "pool1"
  type: "Pooling"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "convres"
  type: "Convolution"
  bottom: "conv1_2"
  top: "convres"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  #param {
   # lr_mult: 2
   # decay_mult: 0
 # }
  convolution_param {
    num_output: 32
    pad: 0
    kernel_size: 1
    bias_term: false
    weight_filler {
      type: "xavier"
    }
  #  bias_filler {
  #    type: "constant"
 #     value: 0
  #  }
  }
}
layer {
  name: "convres_bn"
  type: "BN"
  bottom: "convres"
  top: "convres"
  param {
    lr_mult: 1
    decay_mult: 0
  }
  param {
    lr_mult: 1
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  bn_param {
    slope_filler {
      type: "constant"
      value: 1
    }
    bias_filler {
      type: "constant"
      value: 0
    }
    frozen: true
    momentum: 0.95
  }
}
layer {
  name: "poolres1"
  type: "Pooling"
  bottom: "convres"
  top: "poolres1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "frru1in"
  bottom: "poolres1"
  bottom: "pool1"
  top: "frru1in"
  type: "Concat"
  concat_param {
    axis: 1
  }
}
layer {
  name: "convfrru1in"
  type: "Convolution"
  bottom: "frru1in"
  top: "convfrru1in"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 0
    kernel_size: 1
    bias_term: true
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
     value: 0
    }
  }
}
layer {
  bottom: "convfrru1in"
  top: "conv2_1"
  name: "conv2_1"
  type: "Convolution"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
    num_output: 128
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "conv2_1_bn"
  type: "BN"
  bottom: "conv2_1"
  top: "conv2_1"
  param {
    lr_mult: 1
    decay_mult: 0
  }
  param {
    lr_mult: 1
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  bn_param {
    slope_filler {
      type: "constant"
      value: 1
    }
    bias_filler {
      type: "constant"
      value: 0
    }
    frozen: true
    momentum: 0.95
  }
}
layer {
  bottom: "conv2_1"
  top: "conv2_1"
  name: "relu2_1"
  type: "ReLU"
}
layer {
  bottom: "conv2_1"
  top: "conv2_2"
  name: "conv2_2"
  type: "Convolution"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
    num_output: 128
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "conv2_2_bn"
  type: "BN"
  bottom: "conv2_2"
  top: "conv2_2"
  param {
    lr_mult: 1
    decay_mult: 0
  }
  param {
    lr_mult: 1
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  bn_param {
    slope_filler {
      type: "constant"
      value: 1
    }
    bias_filler {
      type: "constant"
      value: 0
    }
    frozen: true
    momentum: 0.95
  }
}
layer {
  bottom: "conv2_2"
  top: "conv2_2"
  name: "relu2_2"
  type: "ReLU"
}
layer {
  name: "pool2_drop"
  type: "Dropout"
  bottom: "conv2_2"
  top: "conv2_2"
  dropout_param {
    dropout_ratio: 0.5
  }
}
layer {
  name: "frru1resconv"
  type: "Convolution"
  bottom: "conv2_2"
  top: "frru1resconv"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 32
    pad: 0
    kernel_size: 1
    bias_term: true
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "upscoreres1"
  type: "Deconvolution"
  bottom: "frru1resconv"
  top: "upscoreres1"
  param {
    lr_mult: 10
    decay_mult: 10
  }
  convolution_param {
    num_output: 32
    bias_term: false
    kernel_size: 4
    pad: 1
    stride: 2
    weight_filler {
      type: "bilinear"
    }
  }
}
layer {
  name: "res1"
  type: "Eltwise"
  bottom: "convres"	
  bottom: "upscoreres1"
  top: "res1"
  eltwise_param {
    operation: SUM
  }
}
layer {
  bottom: "conv2_2"
  top: "pool2"
 # top: "pool2_mask"
  name: "pool2"
  type: "Pooling"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  bottom: "pool2"
  top: "conv3_1"
  name: "conv3_1"
  type: "Convolution"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
    num_output: 256
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "conv3_1_bn"
  type: "BN"
  bottom: "conv3_1"
  top: "conv3_1"
  param {
    lr_mult: 1
    decay_mult: 0
  }
  param {
    lr_mult: 1
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  bn_param {
    slope_filler {
      type: "constant"
      value: 1
    }
    bias_filler {
      type: "constant"
      value: 0
    }
    frozen: true
    momentum: 0.95
  }
}
layer {
  bottom: "conv3_1"
  top: "conv3_1"
  name: "relu3_1"
  type: "ReLU"
}
layer {
  bottom: "conv3_1"
  top: "conv3_2"
  name: "conv3_2"
  type: "Convolution"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
    num_output: 256
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "conv3_2_bn"
  type: "BN"
  bottom: "conv3_2"
  top: "conv3_2"
  param {
    lr_mult: 1
    decay_mult: 0
  }
  param {
    lr_mult: 1
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  bn_param {
    slope_filler {
      type: "constant"
      value: 1
    }
    bias_filler {
      type: "constant"
      value: 0
    }
    frozen: true
    momentum: 0.95
  }
}
layer {
  bottom: "conv3_2"
  top: "conv3_2"
  name: "relu3_2"
  type: "ReLU"
}
layer {
  bottom: "conv3_2"
  top: "conv3_3"
  name: "conv3_3"
  type: "Convolution"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
    num_output: 256
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "conv3_3_bn"
  type: "BN"
  bottom: "conv3_3"
  top: "conv3_3"
  param {
    lr_mult: 1
    decay_mult: 0
  }
  param {
    lr_mult: 1
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  bn_param {
    slope_filler {
      type: "constant"
      value: 1
    }
    bias_filler {
      type: "constant"
      value: 0
    }
    frozen: true
    momentum: 0.95
  }
}
layer {
  bottom: "conv3_3"
  top: "conv3_3"
  name: "relu3_3"
  type: "ReLU"
}
layer {
  name: "pool3_drop"
  type: "Dropout"
  bottom: "conv3_3"
  top: "conv3_3"
  dropout_param {
    dropout_ratio: 0.5
  }
}
layer {
  bottom: "conv3_3"
  top: "pool3"
#  top: "pool3_mask"
  name: "pool3"
  type: "Pooling"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  bottom: "pool3"
  top: "conv4_1"
  name: "conv4_1"
  type: "Convolution"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "conv4_1_bn"
  type: "BN"
  bottom: "conv4_1"
  top: "conv4_1"
  param {
    lr_mult: 1
    decay_mult: 0
  }
  param {
    lr_mult: 1
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  bn_param {
    slope_filler {
      type: "constant"
      value: 1
    }
    bias_filler {
      type: "constant"
      value: 0
    }
    frozen: true
    momentum: 0.95
  }
}
layer {
  bottom: "conv4_1"
  top: "conv4_1"
  name: "relu4_1"
  type: "ReLU"
}
layer {
  bottom: "conv4_1"
  top: "conv4_2"
  name: "conv4_2"
  type: "Convolution"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "conv4_2_bn"
  type: "BN"
  bottom: "conv4_2"
  top: "conv4_2"
  param {
    lr_mult: 1
    decay_mult: 0
  }
  param {
    lr_mult: 1
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  bn_param {
    slope_filler {
      type: "constant"
      value: 1
    }
    bias_filler {
      type: "constant"
      value: 0
    }
    frozen: true
    momentum: 0.95
  }
}
layer {
  bottom: "conv4_2"
  top: "conv4_2"
  name: "relu4_2"
  type: "ReLU"
}
layer {
  bottom: "conv4_2"
  top: "conv4_3"
  name: "conv4_3"
  type: "Convolution"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "conv4_3_bn"
  type: "BN"
  bottom: "conv4_3"
  top: "conv4_3"
  param {
    lr_mult: 1
    decay_mult: 0
  }
  param {
    lr_mult: 1
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  bn_param {
    slope_filler {
      type: "constant"
      value: 1
    }
    bias_filler {
      type: "constant"
      value: 0
    }
    frozen: true
    momentum: 0.95
  }
}
layer {
  bottom: "conv4_3"
  top: "conv4_3"
  name: "relu4_3"
  type: "ReLU"
}
layer {
  name: "pool4_drop"
  type: "Dropout"
  bottom: "conv4_3"
  top: "conv4_3"
  dropout_param {
    dropout_ratio: 0.5
  }
}
layer {
  bottom: "conv4_3"
  top: "pool4"
 # top: "pool4_mask"
  name: "pool4"
  type: "Pooling"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  bottom: "pool4"
  top: "conv5_1"
  name: "conv5_1"
  type: "Convolution"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "conv5_1_bn"
  type: "BN"
  bottom: "conv5_1"
  top: "conv5_1"
  param {
    lr_mult: 1
    decay_mult: 0
  }
  param {
    lr_mult: 1
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  bn_param {
    slope_filler {
      type: "constant"
      value: 1
    }
    bias_filler {
      type: "constant"
      value: 0
    }
    frozen: true
    momentum: 0.95
  }
}
layer {
  bottom: "conv5_1"
  top: "conv5_1"
  name: "relu5_1"
  type: "ReLU"
}
layer {
  bottom: "conv5_1"
  top: "conv5_2"
  name: "conv5_2"
  type: "Convolution"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "conv5_2_bn"
  type: "BN"
  bottom: "conv5_2"
  top: "conv5_2"
  param {
    lr_mult: 1
    decay_mult: 0
  }
  param {
    lr_mult: 1
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  bn_param {
    slope_filler {
      type: "constant"
      value: 1
    }
    bias_filler {
      type: "constant"
      value: 0
    }
    frozen: true
    momentum: 0.95
  }
}
layer {
  bottom: "conv5_2"
  top: "conv5_2"
  name: "relu5_2"
  type: "ReLU"
}
layer {
  bottom: "conv5_2"
  top: "conv5_3"
  name: "conv5_3"
  type: "Convolution"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "conv5_3_bn"
  type: "BN"
  bottom: "conv5_3"
  top: "conv5_3"
  param {
    lr_mult: 1
    decay_mult: 0
  }
  param {
    lr_mult: 1
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  bn_param {
    slope_filler {
      type: "constant"
      value: 1
    }
    bias_filler {
      type: "constant"
      value: 0
    }
    frozen: true
    momentum: 0.95
  }
}
layer {
  bottom: "conv5_3"
  top: "conv5_3"
  name: "relu5_3"
  type: "ReLU"
}
layer {
  name: "pool5_drop"
  type: "Dropout"
  bottom: "conv5_3"
  top: "conv5_3"
  dropout_param {
    dropout_ratio: 0.5
  }
}
layer {
  bottom: "conv5_3"
  top: "pool5"
  #top: "pool5_mask"
  name: "pool5"
  type: "Pooling"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
# pool5 has a dropout operation
# use pool5_mask for upsample
layer {
  name: "upsample5"
  type: "Deconvolution"
  bottom: "pool5"
  top: "pool5_D"
  param {
    lr_mult: 10
    decay_mult: 10
  }
  convolution_param {
    num_output: 512
    bias_term: false
    kernel_size: 4
    pad: 1
    stride: 2
    weight_filler {
      type: "bilinear"
    }
  }
}
#layer {
 # name: "upsample5"
#  type: "Upsample"
#  bottom: "pool5"
#  top: "pool5_D"
 # bottom: "pool5_mask"
#  upsample_param {
#    scale: 2
#  }
#}
layer {
  bottom: "pool5_D"
  top: "conv5_3_D"
  name: "conv5_3_D"
  type: "Convolution"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "conv5_3_D_bn"
  type: "BN"
  bottom: "conv5_3_D"
  top: "conv5_3_D"
  param {
    lr_mult: 1
    decay_mult: 0
  }
  param {
    lr_mult: 1
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  bn_param {
    slope_filler {
      type: "constant"
      value: 1
    }
    bias_filler {
      type: "constant"
      value: 0
    }
    frozen: true
    momentum: 0.95
  }
}
#layer {
#  bottom: "conv5_3_D"
#  top: "conv5_3_D"
#  name: "conv5_3_D_bn"
#  type: "BN"
#  param {
#    lr_mult: 1
#    decay_mult: 1
#  }
#  param {
#    lr_mult: 1
 #   decay_mult: 0
 # }
#  bn_param {
#	bn_mode: LEARN
#	scale_filler {
#	  type: "constant"
#	  value: 1
#	}
#	shift_filler {
#	  type: "constant"
#	  value: 0
#	}
# }
#}
layer {
  bottom: "conv5_3_D"
  top: "conv5_3_D"
  name: "relu5_3_D"
  type: "ReLU"
}
layer {
  bottom: "conv5_3_D"
  top: "conv5_2_D"
  name: "conv5_2_D"
  type: "Convolution"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "conv5_2_D_bn"
  type: "BN"
  bottom: "conv5_2_D"
  top: "conv5_2_D"
  param {
    lr_mult: 1
    decay_mult: 0
  }
  param {
    lr_mult: 1
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  bn_param {
    slope_filler {
      type: "constant"
      value: 1
    }
    bias_filler {
      type: "constant"
      value: 0
    }
    frozen: true
    momentum: 0.95
  }
}
layer {
  bottom: "conv5_2_D"
  top: "conv5_2_D"
  name: "relu5_2_D"
  type: "ReLU"
}
layer {
  bottom: "conv5_2_D"
  top: "conv5_1_D"
  name: "conv5_1_D"
  type: "Convolution"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "conv5_1_D_bn"
  type: "BN"
  bottom: "conv5_1_D"
  top: "conv5_1_D"
  param {
    lr_mult: 1
    decay_mult: 0
  }
  param {
    lr_mult: 1
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  bn_param {
    slope_filler {
      type: "constant"
      value: 1
    }
    bias_filler {
      type: "constant"
      value: 0
    }
    frozen: true
    momentum: 0.95
  }
}
layer {
  bottom: "conv5_1_D"
  top: "conv5_1_D"
  name: "relu5_1_D"
  type: "ReLU"
}
layer {
  name: "upsample4_drop"
  type: "Dropout"
  bottom: "conv5_1_D"
  top: "conv5_1_D"
  dropout_param {
    dropout_ratio: 0.5
  }
}
# use pool4_mask for upsample
layer {
  name: "upsample4"
  type: "Deconvolution"
  bottom: "conv5_1_D"
  top: "pool4_D"
  param {
    lr_mult: 10
    decay_mult: 10
  }
  convolution_param {
    num_output: 512
    bias_term: false
    kernel_size: 4
    pad: 1
    stride: 2
    weight_filler {
      type: "bilinear"
    }
  }
}
#layer {
 # name: "upsample4"
 # type: "Upsample"
#  bottom: "conv5_1_D"
 # top: "pool4_D"
 # bottom: "pool4_mask"
 # upsample_param {
 #   scale: 2
  #}
#}
layer {
  bottom: "pool4_D"
  top: "conv4_3_D"
  name: "conv4_3_D"
  type: "Convolution"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "conv4_3_D_bn"
  type: "BN"
  bottom: "conv4_3_D"
  top: "conv4_3_D"
  param {
    lr_mult: 1
    decay_mult: 0
  }
  param {
    lr_mult: 1
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  bn_param {
    slope_filler {
      type: "constant"
      value: 1
    }
    bias_filler {
      type: "constant"
      value: 0
    }
    frozen: true
    momentum: 0.95
  }
}
layer {
  bottom: "conv4_3_D"
  top: "conv4_3_D"
  name: "relu4_3_D"
  type: "ReLU"
}
layer {
  bottom: "conv4_3_D"
  top: "conv4_2_D"
  name: "conv4_2_D"
  type: "Convolution"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "conv4_2_D_bn"
  type: "BN"
  bottom: "conv4_2_D"
  top: "conv4_2_D"
  param {
    lr_mult: 1
    decay_mult: 0
  }
  param {
    lr_mult: 1
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  bn_param {
    slope_filler {
      type: "constant"
      value: 1
    }
    bias_filler {
      type: "constant"
      value: 0
    }
    frozen: true
    momentum: 0.95
  }
}
layer {
  bottom: "conv4_2_D"
  top: "conv4_2_D"
  name: "relu4_2_D"
  type: "ReLU"
}
layer {
  bottom: "conv4_2_D"
  top: "conv4_1_D"
  name: "conv4_1_D"
  type: "Convolution"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
    num_output: 256
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "conv4_1_D_bn"
  type: "BN"
  bottom: "conv4_1_D"
  top: "conv4_1_D"
  param {
    lr_mult: 1
    decay_mult: 0
  }
  param {
    lr_mult: 1
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  bn_param {
    slope_filler {
      type: "constant"
      value: 1
    }
    bias_filler {
      type: "constant"
      value: 0
    }
    frozen: true
    momentum: 0.95
  }
}
layer {
  bottom: "conv4_1_D"
  top: "conv4_1_D"
  name: "relu4_1_D"
  type: "ReLU"
}
layer {
  name: "upsample3_drop"
  type: "Dropout"
  bottom: "conv4_1_D"
  top: "conv4_1_D"
  dropout_param {
    dropout_ratio: 0.5
  }
}
# use pool3_mask for upsample
layer {
  name: "upsample3"
  type: "Deconvolution"
  bottom: "conv4_1_D"
  top: "pool3_D"
  param {
    lr_mult: 10
    decay_mult: 10
  }
  convolution_param {
    num_output: 256
    bias_term: false
    kernel_size: 4
    pad: 1
    stride: 2
    weight_filler {
      type: "bilinear"
    }
  }
}
#layer {
#  name: "upsample3"
#  type: "Upsample"
#  bottom: "conv4_1_D"
#  top: "pool3_D"
#  bottom: "pool3_mask"
#  upsample_param {
#    scale: 2
#  }
#}
layer {
  bottom: "pool3_D"
  top: "conv3_3_D"
  name: "conv3_3_D"
  type: "Convolution"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
    num_output: 256
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "conv3_3_D_bn"
  type: "BN"
  bottom: "conv3_3_D"
  top: "conv3_3_D"
  param {
    lr_mult: 1
    decay_mult: 0
  }
  param {
    lr_mult: 1
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  bn_param {
    slope_filler {
      type: "constant"
      value: 1
    }
    bias_filler {
      type: "constant"
      value: 0
    }
    frozen: true
    momentum: 0.95
  }
}
layer {
  bottom: "conv3_3_D"
  top: "conv3_3_D"
  name: "relu3_3_D"
  type: "ReLU"
}
layer {
  bottom: "conv3_3_D"
  top: "conv3_2_D"
  name: "conv3_2_D"
  type: "Convolution"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
    num_output: 256
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "conv3_2_D_bn"
  type: "BN"
  bottom: "conv3_2_D"
  top: "conv3_2_D"
  param {
    lr_mult: 1
    decay_mult: 0
  }
  param {
    lr_mult: 1
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  bn_param {
    slope_filler {
      type: "constant"
      value: 1
    }
    bias_filler {
      type: "constant"
      value: 0
    }
    frozen: true
    momentum: 0.95
  }
}
layer {
  bottom: "conv3_2_D"
  top: "conv3_2_D"
  name: "relu3_2_D"
  type: "ReLU"
}
layer {
  bottom: "conv3_2_D"
  top: "conv3_1_D"
  name: "conv3_1_D"
  type: "Convolution"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
    num_output: 128
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "conv3_1_D_bn"
  type: "BN"
  bottom: "conv3_1_D"
  top: "conv3_1_D"
  param {
    lr_mult: 1
    decay_mult: 0
  }
  param {
    lr_mult: 1
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  bn_param {
    slope_filler {
      type: "constant"
      value: 1
    }
    bias_filler {
      type: "constant"
      value: 0
    }
    frozen: true
    momentum: 0.95
  }
}
layer {
  bottom: "conv3_1_D"
  top: "conv3_1_D"
  name: "relu3_1_D"
  type: "ReLU"
}
layer {
  name: "upsample2_drop"
  type: "Dropout"
  bottom: "conv3_1_D"
  top: "conv3_1_D"
  dropout_param {
    dropout_ratio: 0.5
  }
}
# use pool2_mask for upsample
layer {
  name: "upsample2"
  type: "Deconvolution"
  bottom: "conv3_1_D"
  top: "pool2_D"
  param {
    lr_mult: 10
    decay_mult: 10
  }
  convolution_param {
    num_output: 128
    bias_term: false
    kernel_size: 4
    pad: 1
    stride: 2
    weight_filler {
      type: "bilinear"
    }
  }
}
#layer {
#  name: "upsample2"
#  type: "Upsample"
#  bottom: "conv3_1_D"
#  top: "pool2_D"
#  bottom: "pool2_mask"
#  upsample_param {
#    scale: 2
#  }
#}
layer {
  bottom: "pool2_D"
  top: "conv2_2_D"
  name: "conv2_2_D"
  type: "Convolution"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
    num_output: 128
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "conv2_2_D_bn"
  type: "BN"
  bottom: "conv2_2_D"
  top: "conv2_2_D"
  param {
    lr_mult: 1
    decay_mult: 0
  }
  param {
    lr_mult: 1
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  bn_param {
    slope_filler {
      type: "constant"
      value: 1
    }
    bias_filler {
      type: "constant"
      value: 0
    }
    frozen: true
    momentum: 0.95
  }
}
layer {
  bottom: "conv2_2_D"
  top: "conv2_2_D"
  name: "relu2_2_D"
  type: "ReLU"
}
layer {
  bottom: "conv2_2_D"
  top: "conv2_1_D"
  name: "conv2_1_D"
  type: "Convolution"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
    num_output: 64
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "conv2_1_D_bn"
  type: "BN"
  bottom: "conv2_1_D"
  top: "conv2_1_D"
  param {
    lr_mult: 1
    decay_mult: 0
  }
  param {
    lr_mult: 1
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  bn_param {
    slope_filler {
      type: "constant"
      value: 1
    }
    bias_filler {
      type: "constant"
      value: 0
    }
    frozen: true
    momentum: 0.95
  }
}
layer {
  bottom: "conv2_1_D"
  top: "conv2_1_D"
  name: "relu2_1_D"
  type: "ReLU"
}
layer {
  name: "upsample1_drop"
  type: "Dropout"
  bottom: "conv2_1_D"
  top: "conv2_1_D"
  dropout_param {
    dropout_ratio: 0.5
  }
}
# use pool1_mask for upsample
layer {
  name: "upsample1"
  type: "Deconvolution"
  bottom: "conv2_1_D"
  top: "pool1_D"
  param {
    lr_mult: 10
    decay_mult: 10
  }
  convolution_param {
    num_output: 64
    bias_term: false
    kernel_size: 4
    pad: 1
    stride: 2
    weight_filler {
      type: "bilinear"
    }
  }
}
#layer {
#  name: "upsample1"
#  type: "Upsample"
#  bottom: "conv2_1_D"
#  top: "pool1_D"
#  bottom: "pool1_mask"
#  upsample_param {
#    scale: 2
#  }
#}
layer {
  name: "frru9in"
  bottom: "res1"
  bottom: "pool1_D"
  top: "frru9in"
  type: "Concat"
  concat_param {
    axis: 1
  }
}
layer {
  bottom: "frru9in"
  top: "conv1_2_D"
  name: "conv1_2_D"
  type: "Convolution"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
    num_output: 64
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "conv1_2_D_bn"
  type: "BN"
  bottom: "conv1_2_D"
  top: "conv1_2_D"
  param {
    lr_mult: 1
    decay_mult: 0
  }
  param {
    lr_mult: 1
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  bn_param {
    slope_filler {
      type: "constant"
      value: 1
    }
    bias_filler {
      type: "constant"
      value: 0
    }
    frozen: true
    momentum: 0.95
  }
}
layer {
  bottom: "conv1_2_D"
  top: "conv1_2_D"
  name: "relu1_2_D"
  type: "ReLU"
}
layer {
  bottom: "conv1_2_D"
  top: "conv1_1_D"
  name: "conv1_1_D1"
  type: "Convolution"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
    num_output: 64
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "conv1_1_D_bn"
  type: "BN"
  bottom: "conv1_1_D"
  top: "conv1_1_D"
  param {
    lr_mult: 1
    decay_mult: 0
  }
  param {
    lr_mult: 1
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  bn_param {
    slope_filler {
      type: "constant"
      value: 1
    }
    bias_filler {
      type: "constant"
      value: 0
    }
    frozen: true
    momentum: 0.95
  }
}
layer {
  bottom: "conv1_1_D"
  top: "conv1_1_D"
  name: "relu1_1_D"
  type: "ReLU"
}
layer {
  bottom: "conv1_1_D"
  top: "saliency"
  name: "saliency"
  type: "Convolution"
  param {
    lr_mult: 10
    decay_mult: 1
  }
  param {
    lr_mult: 20
    decay_mult: 0
  }
  convolution_param {
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
    num_output: 2
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "saliency"
  bottom: "map"
  top: "loss"
  loss_param {
#    ignore_label: 255
    normalize: false
  }
}
#layer {
#  name: "loss"
#  type: "Softmax"
 # bottom: "saliency"
 # top: "loss"
#}


